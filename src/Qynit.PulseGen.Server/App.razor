@inject IJSRuntime JS

<FluentDesignSystemProvider BaseLayerLuminance="@BaseLayerLuminance">
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</FluentDesignSystemProvider>

@code
{
    private bool _isDarkMode = false;
    private float BaseLayerLuminance => _isDarkMode ? 0.23f : 1f;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await using var module = await JS.InvokeAsync<IJSObjectReference>("import", "./App.razor.js");
            var objRef = DotNetObjectReference.Create(this);
            await module.InvokeVoidAsync("init", objRef);
            _isDarkMode = await module.InvokeAsync<bool>("isSystemDarkMode");
            StateHasChanged();
        }
    }

    [JSInvokable]
    public async ValueTask OnDarkModeChanged(bool isDarkMode)
    {
        _isDarkMode = isDarkMode;
        await InvokeAsync(StateHasChanged);
    }
}